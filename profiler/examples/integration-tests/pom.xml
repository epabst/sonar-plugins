<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.codehaus.sonar-plugins.profiler.examples</groupId>
  <artifactId>integration-tests</artifactId>
  <version>0.1-SNAPSHOT</version>

  <description>This project demonstrates how to enable profiling for integration-tests.</description>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <maven.version>2.1.0</maven.version>
    <sonarVersion>2.0.1</sonarVersion>

    <maven-version>${maven.version}</maven-version>
    <fake-maven>${project.build.directory}/apache-maven-${maven-version}</fake-maven>

    <jprofiler.workdir>${project.build.directory}/profiler</jprofiler.workdir>
  </properties>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.13.1</version>
    </dependency>

    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>1.4</version>
    </dependency>

    <dependency>
      <groupId>org.apache.maven.shared</groupId>
      <artifactId>maven-verifier</artifactId>
      <version>1.2</version>
      <exclusions>
        <exclusion>
          <groupId>junit</groupId>
          <artifactId>junit</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.codehaus.sonar-plugins.profiler</groupId>
      <artifactId>sonar-profiler-api</artifactId>
      <version>0.1-SNAPSHOT</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <testSourceDirectory>${basedir}/src/it/java</testSourceDirectory>
    <testResources>
      <testResource>
        <directory>${basedir}/src/it/resources</directory>
        <filtering>true</filtering>
        <includes>
          <include>**/*.properties</include>
        </includes>
      </testResource>
    </testResources>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.5</source>
          <target>1.5</target>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <id>enforce-jprofiler</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireProperty>
                  <property>jprofiler.home</property>
                  <message>You must specify jprofiler.home!</message>
                </requireProperty>
                <requireProperty>
                  <property>jprofiler.license</property>
                  <message>You must specify jprofiler.license!</message>
                </requireProperty>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Prepare configuration for JProfiler -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>generate-jprofiler-config</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${basedir}/target/profiler</outputDirectory>
              <resources>
                <resource>
                  <directory>src/it/profiler</directory>
                  <filtering>true</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.sonar</groupId>
        <artifactId>sonar-dev-mojo</artifactId>
        <configuration>
          <wait>false</wait>
        </configuration>
        <executions>
          <execution>
            <id>start-server</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>start</goal>
            </goals>
          </execution>
          <execution>
            <id>stop-server</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.3</version>
        <dependencies>
          <dependency>
            <groupId>org.apache.ant</groupId>
            <artifactId>ant-nodeps</artifactId>
            <version>1.7.1</version>
          </dependency>
          <dependency>
            <groupId>org.apache.ant</groupId>
            <artifactId>ant-junit</artifactId>
            <version>1.7.1</version>
          </dependency>
          <dependency>
            <groupId>org.apache.ant</groupId>
            <artifactId>ant-trax</artifactId>
            <version>1.7.1</version>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <id>analyze-projects</id>
            <phase>integration-test</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <tasks>
                <ant dir="${basedir}" inheritRefs="true">
                  <property name="fake-maven" value="${fake-maven}"/>
                  <property name="jprofiler.workdir" value="${jprofiler.workdir}"/>

                  <target name="analyze-helloworld"/>
                </ant>
              </tasks>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Skip the normal tests, we'll run them in the integration-test phase -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>2.1</version>
        <executions>
          <execution>
            <id>extract-maven</id>
            <phase>generate-test-resources</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.apache.maven</groupId>
                  <artifactId>apache-maven</artifactId>
                  <version>${maven.version}</version>
                  <type>tar.gz</type>
                  <classifier>bin</classifier>
                </artifactItem>
              </artifactItems>
              <outputDirectory>${project.build.directory}</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
